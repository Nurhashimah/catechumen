<h3><%= t 'ptdos.staff_training' %></h3>
<div class="tform">
	<H2><%= t 'ptdos.dos_detail' %></H2>
<table width=100% >
<% form_for(@ptdo) do |f| %>
  <%= f.error_messages %>
	
	<tr>
		<td class="leftcol"><label for="ptcourse_id"><%= t 'ptdos.course' %>:</label></td>
		<td> <%=h @ptdo.ptschedule.ptcourse.name %></td>
	</tr>
	
	<tr>
		<td class="leftcol"><label for="ptschedule_id"><%= t 'ptdos.date' %>:</label></td>
		<td><%=h l(@ptdo.ptschedule.start) %></td>
	</tr>
	
	<tr>
		<td class="leftcol"><label for="staff_id"><%= t 'ptdos.staffname' %>:</label></td>
		<td><%=h @ptdo.applicant_details %></td>
	</tr>

  <!--  Unit Approval Block --><!--role:programme_manager (academician)--><!--role:testing role (mgmt staff)--><!--Prog Mgr/Unit Leader & STAFF must fr same unit-->
  <% permitted_to? :approve, :ptdos do %>
        <!--Hack : Training Administration should not approved siblings application, must be done by Training Manager-->
        <% if (current_login.roles.map(&:name).include?("Training Administration") && @ptdo.unit_members.include?(@ptdo.staff_id)==false) || current_login.roles.map(&:name).include?("Training Manager") || (current_login.roles.map(&:name).include?("Training Administration")==false && current_login.roles.map(&:name).include?("Training Manager")==false)%>
		<% if @ptdo.unit_approve.blank? %>
		<tr>
			<td class="leftcol"><label for="justification"><%= t 'ptdos.justification' %>:</label></td>
			<td><%= f.text_area :justification, :size => '45x2' %></td>
		</tr>
		
		<tr>
			<td class="leftcol"><label for="unit_review"><%= t 'ptdos.unitreview' %>:</label></td>
			<td><%= f.text_area :unit_review, :size => '45x2' %></td>
		</tr>
		
		<tr>
			<td class="leftcol"><label for="unit_approve"><%= t 'ptdos.unitapprove' %>:</label></td>
			<td><%= f.check_box :unit_approve %></td>
		</tr>
		<!--Mgmt staff:replacement done at Unit level, lecturers replacement done at Dept level-->
		<tr>
			<td class="leftcol"><label for="replacement_id"><%= t 'ptdos.replacementstaff' %>:</label></td>
			<td><%= f.collection_select :replacement_id, Staff.find(:all, :conditions => ['id IN(?)', @ptdo.unit_members], :order => 'name ASC'), :id, :staff_name_with_position, :include_blank => (t 'select') %><!--@ptdo.applicant_siblings--></td>
		</tr>
		
		<% end %>
	<% end %>
  <% end %>


  <!-- Department Approval Block -->
  <% permitted_to? :approve, :ptdos do %><!--Training Administration:may approve siblings but AS Timbalan Pengarah Pengurusan not Training Manager-->
		<% if @ptdo.unit_approve? && @ptdo.dept_approve.blank? %>
			<% if ( (@ptdo.applicant.logins.first.roles.map(&:name).include?("Lecturer") || Programme.roots.map(&:name).include?(@ptdo.applicant.position.unit)) && current_login.staff.position.name != "Timbalan Pengarah (Pengurusan)" ) || (@ptdo.applicant.logins.first.roles.map(&:name).include?("Lecturer")==false && Programme.roots.map(&:name).include?(@ptdo.applicant.position.unit)==false && current_login.staff.position.name == "Timbalan Pengarah (Pengurusan)") || current_login.roles.map(&:name).include?("Training Manager") || current_login.roles.map(&:name).include?("Training Administration")  || current_login.roles.map(&:authname).include?("administration")|| current_login.roles.map(&:authname).include?("training_attendance_module_admin" || current_login.roles.map(&:authname).include?("training_attendance_module_user")) %>
			<tr>
				<td class="leftcol"><label for="dept_review"><%= t 'ptdos.deptreview' %>:</label></td>
				<td><%= f.text_field :dept_review %></td>
			</tr>
		
			<tr>
				<td class="leftcol"><label for="dept_approve"><%= t 'ptdos.deptapprove' %>:</label></td>
				<td><%= f.check_box :dept_approve %></td>
			</tr>
				<% if (@ptdo.applicant.logins.first.roles.map(&:name).include?("Lecturer") || Programme.roots.map(&:name).include?(@ptdo.applicant.position.unit))  %>
				<tr>
					<td class="leftcol"><label for="replacement_id"><%= t 'ptdos.replacementstaff' %>:</label></td>
					<td><%#= f.collection_select :replacement_id, Staff.find(:all, :order => :name), :id, :staff_name_with_position %>
					<%= f.collection_select :replacement_id, Staff.find(:all, :conditions => ['id IN(?)', @ptdo.unit_members], :order => 'name ASC'), :id, :staff_name_with_position, :include_blank => (t 'select') %>
					</td>
				<!-- try to do not in then in same dept tree -->
				</tr>
				<% else %>
					<!--Mgmt staff : Dept approval must be done by Timbalan Pengarah (Pengurusan), supposed replacement done within Unit-->
				<% end %>
			<% end %>
		<% end %>
  <% end %>
			
  <% permitted_to? :approve, :ptdos do %>
		<% if @ptdo.dept_approve? && @ptdo.final_approve.blank? && (current_login.staff.position.name == "Pengarah"  || current_login.roles.map(&:authname).include?("administration")  || current_login.roles.map(&:authname).include?("training_attendance_module_admin")  || current_login.roles.map(&:authname).include?("training_attendance_module_user") )%>
		<tr>
			<td class="leftcol"><label for="final_approve"><%= t 'ptdos.finalapprove' %>:</label></td>
			<td><%= f.check_box :final_approve %></td>
		</tr>
		<% end %>
	<% end %>
	
	<%# if @ptdo.dept_approve? && @ptdo.final_approve? && @ptdo.staff_id == current_login.staff_id %>
	<% total_applicant=Ptdo.find(:all, :conditions => ['ptschedule_id=?', @ptdo.ptschedule_id]).count%>
	<% minimum_participant=Ptschedule.find(@ptdo.ptschedule_id).min_participants %>
	<% if @ptdo.dept_approve? && @ptdo.final_approve? && (@ptdo.staff_id == current_login.staff_id  || current_login.roles.map(&:authname).include?("administration") || current_login.roles.map(&:authname).include?("training_attendance_module_admin") || current_login.roles.map(&:authname).include?("training_attendance_module_user")) && total_applicant >= minimum_participant && @ptdo.ptschedule.budget_ok==true && @ptdo.ptschedule.start <= Date.today%>
		<tr>
			<td class="leftcol"><label for="trainee_report"><%= t 'ptdos.trainereport' %>:</label></td>
			<td><%= f.text_area :trainee_report, :size => '60x10' %></td>
		</tr>
	
	<% end %>
</table>

</div>
  <p>
    <%= f.submit (t 'update') %>
  </p>
<% end %>

<%= link_to (t 'show'), @ptdo %> |
<%= link_to (t 'back'), ptdos_path %>